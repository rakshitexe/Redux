#root {
  max-width: 1280px;
  margin: 0 auto;
  padding: 2rem;
  text-align: center;
}

.logo {
  height: 6em;
  padding: 1.5em;
  will-change: filter;
  transition: filter 300ms;
}
.logo:hover {
  filter: drop-shadow(0 0 2em #646cffaa);
}
.logo.react:hover {
  filter: drop-shadow(0 0 2em #61dafbaa);
}

@keyframes logo-spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

@media (prefers-reduced-motion: no-preference) {
  a:nth-of-type(2) .logo {
    animation: logo-spin infinite 20s linear;
  }
}

.card {
  padding: 2em;
}

.read-the-docs {
  color: #888;
}


/* 
1.start with store , configure store by introducing reducers, single source of truth. even 2 stores are possible 

2.create reducers using createslice name, initial state, reducers:{ functions(state, action) }

3.export individual recuders and one mainsource reducer for store

4.implement the usedispatch send values to store using reducers 

5.implement the useSelector to select values from the store 


for api calling use asyncthunk or async tasks
1. create aysnc thunk creates an action which we can dispatch
2. to manage the action we can use extrareducers to keep it in our state .using builder */